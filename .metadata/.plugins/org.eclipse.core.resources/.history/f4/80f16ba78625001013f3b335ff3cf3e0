package org.zerock.controller;

import java.text.SimpleDateFormat;

import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.zerock.domain.SampleDTO;
import org.zerock.domain.TodoDTO;

import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("/sample/")
@Log4j
public class SampleController {
/*
 * 반환타입:void
 * jp
 * 
 * 
 * 
 */
	
	@RequestMapping("/")
	public void basic() {
		log.info("basic............");
	}
	
	
	@RequestMapping(value ="/basic", method= {RequestMethod.GET, RequestMethod.POST})
	public void basicGet() {
		log.info("basicget........................");
	}
	
	
	@GetMapping("basicOnlyGet")
	public void basicGet2() {
		log.info("basic get only get.......");
	}
	
	
	@GetMapping("/ex01")
	public String ex01(SampleDTO dto) {
		log.info(dto);
		return "ex01";
	}
	
	@GetMapping("/ex02")
	public String ex02(@RequestParam("name") String name, @RequestParam("age") int age, Model model) {
		log.info(name);
		log.info(age);
		model.addAttribute("name", name);
		model.addAttribute("age", age);
		return "ex02";
	}
	/*@InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		binder.registerCustomEditor(java.util.Date.class,
		new CustomDateEditor(dateFormat, false));
	}*/
	
	@GetMapping("/ex03")
	public String ex03(TodoDTO todoDTO) {
		log.info("todoDTO:"+ todoDTO);
		return "ex03";
	}
	@GetMapping("/ex04")
	public String ex04(SampleDTO dto, @ModelAttribute("page") int page, Model model) {
		log.info(dto);
		log.info(page);
		//model.addAttribute("page", page);
		return "sample/ex04";
	}

	@GetMapping("/rttr")
	public String rttr(SampleDTO dto, RedirectAttributes rttr, Model model) {
		model.addAttribute("dto", dto);
		rttr.addFlashAttribute("name", dto.getName());
		rttr.addFlashAttribute("age", dto.getAge());
		return "redirect:/sample/rttr";
	}
	
}