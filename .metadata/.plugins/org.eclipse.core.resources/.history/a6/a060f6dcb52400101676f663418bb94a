package org.zerock.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.zerock.dto.BoardVO;
import org.zerock.service.BoardService;

import lombok.RequiredArgsConstructor;
import lombok.extern.log4j.Log4j;

/*
 /board/boardList --> 전체데이터 반환 
 
 
 */


@Controller
@RequestMapping("/board")
@RequiredArgsConstructor
@Log4j
public class BoardController {
	
	private final BoardService boardService;
		
	
	@GetMapping("/boardList")
	public String boardList(Model model) {
		List<BoardVO> list = boardService.selectListBoard();
		model.addAttribute("boardList", list);
		return "boardList";
	}
	
	@GetMapping("/register")
	public String register() {
		return "boardRegister";
	}
	
	@PostMapping("/register")
	public String insertBoard(BoardVO vo) {
		boardService.insertBoard(vo);
		return "redirect:/board/boardList";
	}
	@GetMapping("/view")
	public String viewBoard(@RequestParam("num") int num, Model model) {
		BoardVO vo = boardService.selectOneByNum(num);
		model.addAttribute("board", vo);
		return "boardView";
	}
	
	
	@GetMapping("/checkPassForm")
	public String checkPassForm(@RequestParam("num") int num, Model model) {
	    model.addAttribute("num", num);  // 게시글 번호 전달
	    return "boardCheckPass";         // boardCheckPass.jsp로 이동
	}
	
	
	@PostMapping("/checkPass")
	public String checkPass(@RequestParam("num") int num, @RequestParam("pass") String pass, Model model) {
		BoardVO vo = boardService.checkPassword(pass, num);
		if(vo != null) {
			model.addAttribute("num", num);
	        return "boardCheckSuccess";
		}else {
			model.addAttribute("message", "비밀번호가 일치하지 않습니다.");
			model.addAttribute("num", num);
			return "boardCheckPass";
		}
		
	}
	
	@GetMapping("/delete")
	public String delete(@RequestParam("num") int num) {
		boardService.deleteBoard(num);
		return "redirect:/board/boardList";
	}
	
	@GetMapping("/updateForm")
	public String update(@RequestParam("num") int num, Model model) {
		BoardVO vo = boardService.selectOneByNum(num);
		model.addAttribute("board", vo);
		return "boardUpdate";
	}
	
	@PostMapping("/boardUpdate")
	public String updateBoard(BoardVO vo) {
		boardService.updateBoard(vo);
		return "redirect:/board/boardList";
	}
	
	
	
}
